/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../app/item-response/item-response-form-listing.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/forms/src/form_builder';
import * as import10 from '../../../../../app/item-response/item-response-form-input.component';
import * as import11 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import12 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import13 from './item-response-form-input.component.ngfactory';
import * as import14 from '@angular/core/src/linker/view_container';
import * as import15 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import16 from '@angular/forms/src/directives/control_container';
import * as import17 from '@angular/forms/src/directives/ng_control_status';
import * as import18 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import21 from '@angular/common/src/directives/ng_for';
export class Wrapper_ItemResponseFormListingComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ItemResponseFormListingComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.ItemResponseFormListingComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_choices(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.choices = currValue;
      this._expr_0 = currValue;
    }
  }
  check_controlName(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.controlName = currValue;
      this._expr_1 = currValue;
    }
  }
  check_inputId(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.inputId = currValue;
      this._expr_2 = currValue;
    }
  }
  check_inputType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.inputType = currValue;
      this._expr_3 = currValue;
    }
  }
  check_describedby(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.describedby = currValue;
      this._expr_4 = currValue;
    }
  }
  check_formGroup(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.formGroup = currValue;
      this._expr_5 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.submitCall.subscribe(_eventHandler.bind(view,'submitCall'))); }
  }
}
var renderType_ItemResponseFormListingComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ItemResponseFormListingComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ItemResponseFormListingComponent>;
  _ItemResponseFormListingComponent_0_3:Wrapper_ItemResponseFormListingComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ItemResponseFormListingComponent_Host0,renderType_ItemResponseFormListingComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'item-response-form-listing',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ItemResponseFormListingComponent0(this.viewUtils,this,0,this._el_0);
    this._ItemResponseFormListingComponent_0_3 = new Wrapper_ItemResponseFormListingComponent(this.injectorGet(import9.FormBuilder,this.parentIndex));
    this.compView_0.create(this._ItemResponseFormListingComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ItemResponseFormListingComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ItemResponseFormListingComponent) && (0 === requestNodeIndex))) { return this._ItemResponseFormListingComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ItemResponseFormListingComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ItemResponseFormListingComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ItemResponseFormListingComponentNgFactory:import8.ComponentFactory<import0.ItemResponseFormListingComponent> = new import8.ComponentFactory<import0.ItemResponseFormListingComponent>('item-response-form-listing',View_ItemResponseFormListingComponent_Host0,import0.ItemResponseFormListingComponent);
const styles_ItemResponseFormListingComponent:any[] = ([] as any[]);
class View_ItemResponseFormListingComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  compView_7:import2.AppView<import10.ItemResponseFormInputComponent>;
  _FormGroupDirective_7_3:import11.Wrapper_FormGroupDirective;
  _ControlContainer_7_4:any;
  _NgControlStatusGroup_7_5:import12.Wrapper_NgControlStatusGroup;
  _ItemResponseFormInputComponent_7_6:import13.Wrapper_ItemResponseFormInputComponent;
  _text_8:any;
  _text_9:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import14.ViewContainer) {
    super(View_ItemResponseFormListingComponent1,renderType_ItemResponseFormListingComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','form-group row'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'button',new import3.InlineArray2(2,'class','form-control form-control-xs col-xs-3 col-sm-2 col-md-1 btn btn-outline-secondary'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n            add\n        ',(null as any));
    this._text_4 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','col-xs-9 col-sm-10 col-md-11'),(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n            ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'item-response-form-input',new import3.InlineArray2(2,'class','form-control-xs'),(null as any));
    this.compView_7 = new import13.View_ItemResponseFormInputComponent0(this.viewUtils,this,7,this._el_7);
    this._FormGroupDirective_7_3 = new import11.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_7_4 = this._FormGroupDirective_7_3.context;
    this._NgControlStatusGroup_7_5 = new import12.Wrapper_NgControlStatusGroup(this._ControlContainer_7_4);
    this._ItemResponseFormInputComponent_7_6 = new import13.Wrapper_ItemResponseFormInputComponent();
    this.compView_7.create(this._ItemResponseFormInputComponent_7_6.context);
    this._text_8 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._text_9 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_2));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_7,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_7));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.FormGroupDirective) && (7 === requestNodeIndex))) { return this._FormGroupDirective_7_3.context; }
    if (((token === import16.ControlContainer) && (7 === requestNodeIndex))) { return this._ControlContainer_7_4; }
    if (((token === import17.NgControlStatusGroup) && (7 === requestNodeIndex))) { return this._NgControlStatusGroup_7_5.context; }
    if (((token === import10.ItemResponseFormInputComponent) && (7 === requestNodeIndex))) { return this._ItemResponseFormInputComponent_7_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_7_0_0:any = this.parentView.context.formGroup;
    this._FormGroupDirective_7_3.check_form(currVal_7_0_0,throwOnChange,false);
    this._FormGroupDirective_7_3.ngDoCheck(this,this._el_7,throwOnChange);
    this._NgControlStatusGroup_7_5.ngDoCheck(this,this._el_7,throwOnChange);
    const currVal_7_2_0:any = this.context.$implicit.controlName;
    this._ItemResponseFormInputComponent_7_6.check_controlName(currVal_7_2_0,throwOnChange,false);
    const currVal_7_2_1:any = this.context.$implicit.controlName;
    this._ItemResponseFormInputComponent_7_6.check_inputId(currVal_7_2_1,throwOnChange,false);
    const currVal_7_2_2:any = 'text';
    this._ItemResponseFormInputComponent_7_6.check_inputType(currVal_7_2_2,throwOnChange,false);
    const currVal_7_2_3:any = this.parentView.context.describedby;
    this._ItemResponseFormInputComponent_7_6.check_describedby(currVal_7_2_3,throwOnChange,false);
    const currVal_7_2_4:any = this.parentView.context.formGroup;
    this._ItemResponseFormInputComponent_7_6.check_formGroup(currVal_7_2_4,throwOnChange,false);
    this._ItemResponseFormInputComponent_7_6.ngDoCheck(this,this._el_7,throwOnChange);
    this._NgControlStatusGroup_7_5.checkHost(this,this.compView_7,this._el_7,throwOnChange);
    this.compView_7.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_7.destroy();
    this._FormGroupDirective_7_3.ngOnDestroy();
    this._ItemResponseFormInputComponent_7_6.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.addSiblingListItem($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_7_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
var renderType_ItemResponseFormListingComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_ItemResponseFormListingComponent,{});
export class View_ItemResponseFormListingComponent0 extends import2.AppView<import0.ItemResponseFormListingComponent> {
  _el_0:any;
  _FormGroupDirective_0_3:import11.Wrapper_FormGroupDirective;
  _ControlContainer_0_4:any;
  _NgControlStatusGroup_0_5:import12.Wrapper_NgControlStatusGroup;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import14.ViewContainer;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import18.Wrapper_NgFor;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ItemResponseFormListingComponent0,renderType_ItemResponseFormListingComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','container'),(null as any));
    this._FormGroupDirective_0_3 = new import11.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_0_4 = this._FormGroupDirective_0_3.context;
    this._NgControlStatusGroup_0_5 = new import12.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import14.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import19.TemplateRef_(this,2,this._anchor_2);
    this._NgFor_2_6 = new import18.Wrapper_NgFor(this._vc_2.vcRef,this._TemplateRef_2_5,this.parentView.injectorGet(import20.IterableDiffers,this.parentIndex),this.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import21.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6.context; }
    if (((token === import15.FormGroupDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._FormGroupDirective_0_3.context; }
    if (((token === import16.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._ControlContainer_0_4; }
    if (((token === import17.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgControlStatusGroup_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.formGroup;
    this._FormGroupDirective_0_3.check_form(currVal_0_0_0,throwOnChange,false);
    this._FormGroupDirective_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_2_0_0:any = this.context.listItems;
    this._NgFor_2_6.check_ngForOf(currVal_2_0_0,throwOnChange,false);
    this._NgFor_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatusGroup_0_5.checkHost(this,this,this._el_0,throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._FormGroupDirective_0_3.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 2)) { return new View_ItemResponseFormListingComponent1(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}