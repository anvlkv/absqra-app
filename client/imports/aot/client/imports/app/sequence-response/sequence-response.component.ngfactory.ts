/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../app/sequence-response/sequence-response.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/router/src/router_state';
import * as import9 from '@angular/router/src/router';
import * as import10 from '@angular/forms/src/form_builder';
import * as import11 from '../../../../../app/partials/submit-control/submit-control.component';
import * as import12 from '../partials/submit-control/submit-control.component.ngfactory';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '../../../../../app/item-response/item-response.component';
import * as import15 from '../item-response/item-response.component.ngfactory';
import * as import16 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/common/src/directives/ng_if';
export class Wrapper_SequenceResponseComponent {
  /*private*/ _eventHandler:Function;
  context:import0.SequenceResponseComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.SequenceResponseComponent(p0,p1,p2);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_SequenceResponseComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_SequenceResponseComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.SequenceResponseComponent>;
  _SequenceResponseComponent_0_3:Wrapper_SequenceResponseComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SequenceResponseComponent_Host0,renderType_SequenceResponseComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'sequence-response',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_SequenceResponseComponent0(this.viewUtils,this,0,this._el_0);
    this._SequenceResponseComponent_0_3 = new Wrapper_SequenceResponseComponent(this.injectorGet(import8.ActivatedRoute,this.parentIndex),this.injectorGet(import9.Router,this.parentIndex),this.injectorGet(import10.FormBuilder,this.parentIndex));
    this.compView_0.create(this._SequenceResponseComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._SequenceResponseComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.SequenceResponseComponent) && (0 === requestNodeIndex))) { return this._SequenceResponseComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SequenceResponseComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._SequenceResponseComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const SequenceResponseComponentNgFactory:import7.ComponentFactory<import0.SequenceResponseComponent> = new import7.ComponentFactory<import0.SequenceResponseComponent>('sequence-response',View_SequenceResponseComponent_Host0,import0.SequenceResponseComponent);
const styles_SequenceResponseComponent:any[] = ([] as any[]);
class View_SequenceResponseComponent2 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import11.SubmitControlComponent>;
  _SubmitControlComponent_0_3:import12.Wrapper_SubmitControlComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_SequenceResponseComponent2,renderType_SequenceResponseComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'submit-control',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import12.View_SubmitControlComponent0(this.viewUtils,this,0,this._el_0);
    this._SubmitControlComponent_0_3 = new import12.Wrapper_SubmitControlComponent();
    this.compView_0.create(this._SubmitControlComponent_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'submitCall',(null as any),'resetCall',(null as any)),this.eventHandler(this.handleEvent_0));
    this._SubmitControlComponent_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true,true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.SubmitControlComponent) && (0 === requestNodeIndex))) { return this._SubmitControlComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._SubmitControlComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._SubmitControlComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'submitCall')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.submitItemResponse($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'resetCall')) {
      const pd_sub_1:any = ((<any>this.parentView.parentView.context.resetResponseForm($event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
class View_SequenceResponseComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  compView_2:import1.AppView<import14.ItemResponseComponent>;
  _ItemResponseComponent_2_3:import15.Wrapper_ItemResponseComponent;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import13.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import16.Wrapper_NgIf;
  _text_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_SequenceResponseComponent1,renderType_SequenceResponseComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'section',new import3.InlineArray2(2,'class','col-12 col-sm-8 offset-sm-2'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'item-response',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_2 = new import15.View_ItemResponseComponent0(this.viewUtils,this,2,this._el_2);
    this._ItemResponseComponent_2_3 = new import15.Wrapper_ItemResponseComponent();
    this.compView_2.create(this._ItemResponseComponent_2_3.context);
    this._text_3 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import13.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import17.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import16.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray4(4,'submitCall',(null as any),'responseFormChange',(null as any)),this.eventHandler(this.handleEvent_2));
    this._ItemResponseComponent_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true,false);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._anchor_4,
      this._text_5
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.ItemResponseComponent) && (2 === requestNodeIndex))) { return this._ItemResponseComponent_2_3.context; }
    if (((token === import17.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import18.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.item;
    this._ItemResponseComponent_2_3.check_item(currVal_2_0_0,throwOnChange,false);
    const currVal_2_0_1:any = this.parentView.context.responseForm;
    this._ItemResponseComponent_2_3.check_responseForm(currVal_2_0_1,throwOnChange,false);
    this._ItemResponseComponent_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    const currVal_4_0_0:any = this.parentView.context.showFormControls;
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this.compView_2.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_4.destroyNestedViews();
    this.compView_2.destroy();
    this._ItemResponseComponent_2_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 4)) { return new View_SequenceResponseComponent2(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    return (null as any);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'submitCall')) {
      const pd_sub_0:any = ((<any>this.parentView.context.submitItemResponse($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'responseFormChange')) {
      const pd_sub_1:any = ((<any>(this.parentView.context.responseForm = $event)) !== false);
      result = (pd_sub_1 && result);
    }
    return result;
  }
}
var renderType_SequenceResponseComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_SequenceResponseComponent,{});
export class View_SequenceResponseComponent0 extends import1.AppView<import0.SequenceResponseComponent> {
  _anchor_0:any;
  /*private*/ _vc_0:import13.ViewContainer;
  _TemplateRef_0_5:any;
  _NgIf_0_6:import16.Wrapper_NgIf;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_SequenceResponseComponent0,renderType_SequenceResponseComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_0 = new import13.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import17.TemplateRef_(this,0,this._anchor_0);
    this._NgIf_0_6 = new import16.Wrapper_NgIf(this._vc_0.vcRef,this._TemplateRef_0_5);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._anchor_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import18.NgIf) && (0 === requestNodeIndex))) { return this._NgIf_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = (this.context.item && this.context.responseForm);
    this._NgIf_0_6.check_ngIf(currVal_0_0_0,throwOnChange,false);
    this._NgIf_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 0)) { return new View_SequenceResponseComponent1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
}